name: 'Setup binaries'
description: 'Setup a list of dependencies with one action'

inputs:
  # config
  token:
    description: 'GitHub Token'
    required: false
  
  # apps
  docker-qmeu:
    description: 'Install'
    required: false
    default: 'false'
  docker-buildx:
    description: 'Install'
    required: false
    default: 'false'
  docker-buildx-driver:
    description: 'Docker Buildx Driver'
    required: false
    default: 'docker-container'
  kubectl:
    description: 'Install'
    required: false
    default: 'false'
  nodejs:
    description: 'Inform the Nodejs version'
    required: false
    default: 'false'
  python:
    description: 'Inform the Python version'
    required: false
    default: 'false'
  poetry:
    description: 'Inform the Poetry version'
    required: false
    default: 'false'
  go:
    description: 'Inform the Go version'
    required: false
    default: 'false'
  java:
    description: 'Inform the Java version'
    required: false
    default: 'false'
  yq:
    description: 'Install'
    required: false
    default: 'false'
  ytt:
    description: 'Install'
    required: false
    default: 'false'

outputs:
  buildx_name:
    description: ""
    value: ${{steps.docker-buildx.outputs.name}}

runs:
  using: "composite"

  steps:

    # nodejs
    - name: Setup | NodeJs ${{ inputs.nodejs }}
      if: inputs.nodejs != 'false'
      uses: actions/setup-node@v3
      id: node
      with:
        node-version: ${{ inputs.nodejs }}
        check-latest: true
        cache: 'npm'

    - name: Setup | NodeJs NPM & yarn & pnpm
      if: inputs.nodejs != 'false'
      shell: bash
      id: npm
      run: npm -g install npm yarn pnpm && npm -g upgrade && npm -v && yarn -v && pnpm -v

    # python
    - name: Setup | Python ${{ inputs.python }}
      if: inputs.python != 'false'
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ inputs.python }}
        check-latest: true
        cache: 'pip'

    - name: Setup | Poetry ${{ inputs.poetry }}
      if: inputs.python != 'false'
      uses: snok/install-poetry@v1
      with:
        version: ${{ inputs.poetry }}

    # go
    - name: Setup | Go ${{ inputs.go }}
      if: inputs.go != 'false'
      uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go }}
        check-latest: true
        cache: true
    
    # java
    - name: Setup | Java ${{ inputs.java }}
      if: inputs.java != 'false'
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java }}
        check-latest: true
        cache: 'gradle'

    # docker
    - name: Setup | Docker QMEU
      if: inputs.docker-qmeu != 'false'
      uses: docker/setup-qemu-action@v3
      id: docker-qmeu

    - name: Setup | Docker Buildx
      if: inputs.docker-buildx != 'false'
      uses: docker/setup-buildx-action@v3
      id: docker-buildx
      with:
        install: true
        driver: ${{inputs.docker-buildx-driver}}

    # kubectl
    - name: Setup | Kubectl
      if: inputs.kubectl != 'false'
      uses: azure/setup-kubectl@v2.1
      id: kubectl

    # yq
    - name: Setup | YQ
      if: inputs.yq != 'false'
      shell: bash
      id: yq
      env:
        VERSION: v4.35.2
        BINARY: yq_linux_amd64
      run: |
        wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - | tar xz && sudo mv ${BINARY} /usr/bin/yq
        yq --version
    
    # ytt
    - name: Setup | YTT
      if: inputs.ytt != 'false'
      uses: carvel-dev/setup-action@v1
      id: ytt
      with:
        only: ytt
        token: ${{inputs.token}}
